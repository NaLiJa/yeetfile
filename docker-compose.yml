services:
  db:
    image: postgres
    restart: always
    container_name: database
    hostname: postgres
    volumes:
      - yeetfile_data:/var/lib/postgresql/data
      - ./backend/db/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_USER: ${YEETFILE_DB_USER:-postgres}
      POSTGRES_PASSWORD: ${YEETFILE_DB_PASS:-postgres}
      POSTGRES_DB: ${YEETFILE_DB_NAME:-yeetfile}
    #ports:
      #- "5432:5432" # Map db port to host
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s

  api:
    container_name: yeetfile
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${YEETFILE_PORT:-8090}:${YEETFILE_PORT:-8090}"
    depends_on:
      db:
        condition: service_healthy
    env_file: "${YEETFILE_ENV_FILE:-.env}"
    environment:
      YEETFILE_DB_HOST: "db"

    # Map upload dir to host machine (local only)
    volumes:
      - ~/.local/share/yeetfile/uploads:/app/uploads

volumes:
  yeetfile_data:
    external: true # Run "docker volume create --name=yeetfile_data" beforehand
